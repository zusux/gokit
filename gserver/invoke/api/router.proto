syntax = "proto3";

package api;

option go_package = "github.com/zusux/gokit/gserver/invoke/api;api";

message GenericRequest {
  uint32 service_id = 1;
  uint32 method_id = 2;
  map<string, string> headers = 3;
  string payload_json = 4; // 建议使用 JSON 字符串（简单易处理）
}

message GenericResponse {
  int32 code = 1;
  string message = 2;
  string payload_json = 3; // 返回的 JSON 字符串
}

service InternalRouter {
  rpc Invoke(GenericRequest) returns (GenericResponse);
}

// Makefile 支持
// MODULE := $(shell go list -m)
// 添加目标：make gen-internal-router

// gen-internal-router:
// 	@echo '==> Patching go_package in internal_router.proto...'
// 	sed -i.bak -E 's|option go_package = "github.com/zusux/gateway/api/invoke;invoke";|' api/internal/internal_router.proto
// 	rm -f api/internal/internal_router.proto.bak
// 	@echo '==> Generating internal_router.pb.go...'
// 	protoc \
// 		--proto_path=. \
// 		--proto_path=./third_party \
// 		--go_out=paths=source_relative:. \
// 		--go-grpc_out=paths=source_relative:. \
// 		api/internal/internal_router.proto