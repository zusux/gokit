// Code generated by protoc-gen-tag. DO NOT EDIT.
package example

type UserTag struct {
	Id   string `json:"id" bson:"_id" gorm:"column:id"`
	Name string `json:"name" gorm:"column:name"`
	Age  string `json:"age,omitempty"`
}

func (x *User) ToUserTag() *UserTag {
	if x == nil {
		return nil
	}
	return &UserTag{
		Id:   x.Id,
		Name: x.Name,
		Age:  x.Age,
	}
}
func (x *UserTag) ToUser() *User {
	if x == nil {
		return nil
	}
	return &User{
		Id:   x.Id,
		Name: x.Name,
		Age:  x.Age,
	}
}

type UserListTag struct {
	Users []*UserTag `json:"users" bson:"users"`
}

func (x *UserList) ToUserListTag() *UserListTag {
	if x == nil {
		return nil
	}
	return &UserListTag{
		Users: func() []*UserTag {
			out := make([]*UserTag, len(x.Users))
			for i, v := range x.Users {
				out[i] = v.ToUserTag()
			}
			return out
		}(),
	}
}
func (x *UserListTag) ToUserList() *UserList {
	if x == nil {
		return nil
	}
	return &UserList{
		Users: func() []*User {
			out := make([]*User, len(x.Users))
			for i, v := range x.Users {
				out[i] = v.ToUser()
			}
			return out
		}(),
	}
}

type RespTag struct {
	Code int32        `json:"code,omitempty"`
	Msg  string       `json:"msg,omitempty"`
	Data *UserListTag `json:"users" bson:"users"`
}

func (x *Resp) ToRespTag() *RespTag {
	if x == nil {
		return nil
	}
	return &RespTag{
		Code: x.Code,
		Msg:  x.Msg,
		Data: x.Data.ToUserListTag(),
	}
}
func (x *RespTag) ToResp() *Resp {
	if x == nil {
		return nil
	}
	return &Resp{
		Code: x.Code,
		Msg:  x.Msg,
		Data: x.Data.ToUserList(),
	}
}
